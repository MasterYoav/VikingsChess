plugins {
  id 'application'
}

group = 'com.vikingschess'
version = '1.0.3'

repositories { mavenCentral() }

application {
  // Your entry point class (default package):
  mainClass = 'Main'
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(23)
  }
}

/* map sources to repo root so you don't have to move files now */
sourceSets {
  main {
    java { srcDirs = ['.'] }
    resources { srcDirs = [] }
  }
  test { java { srcDirs = [] } }
}

// Custom task to create a runtime image
task runtime(type: Exec) {
  dependsOn 'build'
  doFirst {
    delete "${buildDir}/jre"
  }
  
  commandLine 'jlink',
    '--add-modules', 'java.base,java.desktop',
    '--strip-debug',
    '--no-header-files',
    '--no-man-pages',
    '--output', "${buildDir}/jre"
}

// Custom task to create native executables
task jpackage(type: Exec) {
  dependsOn 'runtime'
  doFirst {
    delete "${buildDir}/dist"
  }
  
  def os = org.gradle.internal.os.OperatingSystem.current()
  def iconPath = os.isWindows() ? 'packaging/icon.ico'
               : os.isMacOsX()  ? 'packaging/icon.icns'
                                : 'packaging/icon.png'
  
  // Determine the package type based on OS
  def packageType = os.isWindows() ? 'exe'
                  : os.isMacOsX()  ? 'dmg'  // or 'pkg' for installer
                                   : 'deb'  // or 'rpm' for Red Hat systems
  
  def baseArgs = [
    'jpackage',
    '--type', packageType,
    '--input', "${buildDir}/libs",
    '--dest', "${buildDir}/dist",
    '--name', 'VikingsChess',
    '--main-class', 'Main',
    '--main-jar', "${project.name}-${version}.jar",
    '--runtime-image', "${buildDir}/jre",
    '--app-version', version.toString(),
    '--vendor', 'VikingsChess',
    '--description', 'Vikings Chess Game'
  ]
  
  // Add icon if file exists
  if (file(iconPath).exists()) {
    baseArgs += ['--icon', iconPath]
  }
  
  // Add OS-specific options
  if (os.isWindows()) {
    baseArgs += [
      '--win-dir-chooser',
      '--win-shortcut',
      '--win-menu'
    ]
  } else if (os.isMacOsX()) {
    baseArgs += [
      '--mac-package-identifier', 'com.vikingschess.app',
      '--mac-package-name', 'VikingsChess'
    ]
  } else {
    // Linux options
    baseArgs += [
      '--linux-shortcut',
      '--linux-menu-group', 'Games',
      '--linux-deb-maintainer', 'vikingschess@example.com',
      '--linux-package-deps', ''
    ]
  }
  
  commandLine baseArgs
}

// Alternative task for creating portable executables (app-image)
task jpackagePortable(type: Exec) {
  dependsOn 'runtime'
  doFirst {
    delete "${buildDir}/portable"
  }
  
  def os = org.gradle.internal.os.OperatingSystem.current()
  def iconPath = os.isWindows() ? 'packaging/icon.ico'
               : os.isMacOsX()  ? 'packaging/icon.icns'
                                : 'packaging/icon.png'
  
  def baseArgs = [
    'jpackage',
    '--type', 'app-image',
    '--input', "${buildDir}/libs",
    '--dest', "${buildDir}/portable",
    '--name', 'VikingsChess',
    '--main-class', 'Main',
    '--main-jar', "${project.name}-${version}.jar",
    '--runtime-image', "${buildDir}/jre",
    '--app-version', version.toString(),
    '--vendor', 'VikingsChess'
  ]
  
  // Add icon if file exists
  if (file(iconPath).exists()) {
    baseArgs += ['--icon', iconPath]
  }
  
  // Add OS-specific options
  if (os.isMacOsX()) {
    baseArgs += ['--mac-package-identifier', 'com.vikingschess.app']
  }
  
  commandLine baseArgs
}
